¿Cuándo desea utilizar un repositorio remoto en lugar de mantener todo su trabajo
local?

    Cuando quiero hacer publico mi trabajo y me pueda ser un proyecto de openSource, 
    ademas es muy util para cuando estamos trabajando en equipo.

¿Por qué puede querer tirar siempre los cambios manualmente en lugar de tener Git
mantenerse automáticamente actualizados con su repositorio remoto?

    para tener en constante actualizacion mi repositorio.

Describir las diferencias entre las horquillas, clones y ramas. Cuando podrias
utilizar uno en lugar de otro?

    Clonar una archivo de github y lo tendremos en nuestro ordenador pero los cambios que se hagan y si los queremos subir con push se veran refeljados en su repositorio donde fue clonado, con fork lo clonamos en github y despues lo clonamos a nuestra computadora y despues de aver modificaco ciertos archivos con push lo veremos reflejado en github pero ahora en nuestro repositorio.

¿Cuál es el beneficio de tener una copia del último estado conocido de la distancia
almacenado localmente?

    Mantenemos actualizado nuestro repositorio y con actualizaciones en nuestro trabajo.

¿Cómo te colaborar sin usar Git o GitHub? Lo que sería más fácil,
y lo que sería más difícil?

    Se puede tener un mejor control ademas de tener la opinion de diferentes personas, por lo cual nos puden ayudar a tener un trabajo mas completos.

¿Cuándo desee realizar cambios en una rama separada en lugar de directamente en
¿dominar? ¿Qué beneficios tiene cada enfoque?

    /*Que acaba de ver que el flujo de trabajo cuando se hacen cambios en una rama separada es más complicado que trabajan directamente en el maestro, especialmente cuando se necesita para mantenerse al día con los cambios realizados por otros. En lugar de simplemente tirar y empujar, es necesario extraer los cambios en su rama maestro local, fusionar el maestro local en su rama (diferente de aceite, en nuestro caso), y luego empujar a su rama en el mando a distancia antes de que finalmente la fusión de su sucursal en maestro, ya sea a nivel local o en GitHub.*/

    Es un poco mas dificil pero ahi que tener en cuenta que para colaborar con otras personas y hacer retroalimentacion se es necesario saber utilizar los comandos y saber aplicarlos.
